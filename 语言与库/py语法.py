_________________________________________基本语法________________________________________________
#1 注释语法
    #这是一个单行注释
    '''
    多行注释1
    '''
    """
    多行注释2
    """
#2 多行语句 \  括号中的多行语句不需要"\"
   #可以在同一行使用多条语句 语句间使用；分隔
#3 类型  数字
    '''
    int bool float complex
    '''
#4 类型  字符串
    # 单双引号用法相同 使用三引号约定多行字符串 ''' """
    # 转义  "\"  使用r可以使字符串内的\不发生转义
    # 链接和重复  +  *
    # 截取 索引采取从左往右0 从右往左-1 并且没有单独的字符类型 字符串的截取的语法格式如下：变量[头下标:尾下标:步长]
    '''
    print(str)                 # 输出字符串
    print(str[0:-1])           # 输出第一个到倒数第二个的所有字符
    print(str[0])              # 输出字符串第一个字符
    print(str[2:5])            # 输出从第三个开始到第五个的字符
    print(str[2:])             # 输出从第三个开始的后的所有字符
    print(str * 2)             # 输出字符串两次
    '''
#5 输入输出
    input()  #input()括号内可以放置内容输出，程序会先输出括号内的内容，读入用户输入的内容，用户键入enter时退出输入
    print("a", end="aaa")  #默认输出是换行的，如果要实现不换行需要在变量末尾加上 end=""： 左侧语句结果为aaaa
#6 代码组和子句
    if expression :   #首句连同其下的代码组一起称 子句clause
        suite    #缩进相同的一组语句称代码组
    elif expression : 
        suite 
    else : 
        suite
#7 导入模块
    '''
    将整个模块(somemodule)导入，格式为： import somemodule
    从某个模块中导入某个函数,格式为： from somemodule import somefunction
    从某个模块中导入多个函数,格式为： from somemodule import firstfunc, secondfunc, thirdfunc
    将某个模块中的全部函数导入，格式为： from somemodule import *
    '''

_________________________________________标准数据类型________________________________________________

#1 标准数据类型
    #不可变       Number（数字）、String（字符串）、Tuple（元组）；
    #可变         List（列表）、Dictionary（字典）、Set（集合）
#2 判断类型函数    type()   isinstance() 它们的区别
    #type()不会认为子类是一种父类类型
    #isinstance()会认为子类是一种父类类型
#3 数字(Number)
    '''
    Bool类型写作True Flase 但仍可以和int相加
    + - * //(整除)  /(浮点除)
    复数的实部虚部都是浮点型
    '''
    '''
    注：1、Python可以同时为多个变量赋值，如a, b = 1, 2。
    2、一个变量可以通过赋值指向不同类型的对象。
    3、数值的除法包含两个运算符：/ 返回一个浮点数，// 返回一个整数。
    4、在混合计算时，Python会把整型转换成为浮点数
    '''
#4 字符串
    注意py中的子符串 不可变 也就是说不能对字符串中指定位置的字符赋值
    # 单双引号用法相同 使用三引号约定多行字符串 ''' """
    # 转义  "\"  使用r可以使字符串内的\不发生转义
    # 链接和重复  +  *
    # 截取 索引采取从左往右0 从右往左-1 并且没有单独的字符类型 字符串的截取的语法格式如下：变量[头下标:尾下标:步长]
    '''
    print(str)                 # 输出字符串
    print(str[0:-1])           # 输出第一个到倒数第二个的所有字符
    print(str[0])              # 输出字符串第一个字符
    print(str[2:5])            # 输出从第三个开始到第五个的字符
    print(str[2:])             # 输出从第三个开始的后的所有字符
    print(str * 2)             # 输出字符串两次
    '''
#5 列表
    # 列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。
    # 列表是写在方括号 [] 之间、用逗号分隔开的元素列表。
    # 和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。截取格式： 列表[头下标:尾下标:步长]
    # 同样支持拼接和重复
    List不同于字符串，内部元素灵活，且可变
    # 内置append()、pop() 等等便捷的方法
#6 元组
    # 元组（tuple）与列表类似，不同之处在于元组的元素不能修改，可以将字符串视为元组的一种。元组写在小括号 () 里，元素之间用逗号隔开。 
    # 元组中的元素类型也可以不相同 
    # 元组也可以被索引、切片、拼接、重复，方法一样。
    注意构造包含 0 或 1 个元素的元组的特殊语法规则：tup1 = ()  空元组    tup2 = (20,) 一个元素，需要在元素后添加逗号